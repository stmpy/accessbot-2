on:
  workflow_run:
    workflows: ["1.0.x"]
    branches: [ 1.0.x ]
    types:
      - completed

name: 1.0.x-release

jobs:
  release:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
        ref: 1.0.x

    - name: Bump version and push tag
      id: version
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        RELEASE_BRANCHES: 1.0.x
        DEFAULT_BUMP: patch
        TAG_CONTEXT: branch

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: public.ecr.aws/strongdm
        ECR_REPOSITORY: accessbot
        IMAGE_TAG: ${{ steps.version.outputs.new_tag }}
      run: |
        # Adding version
        echo __version__=\"$IMAGE_TAG\" > plugins/sdm/_version.py
        # Building docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # Pushing image to ECR
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest-1.0
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest-1.0
